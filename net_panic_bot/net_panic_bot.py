#!/usr/bin/env python3
import time
import telebot
from telebot import types

# === –¢–æ–∫–µ–Ω Telegram ===
TOKEN = "8247573717:AAEWVkxsTFsCzbPGIWwLkfQvcfpAdJromaU"
bot = telebot.TeleBot(TOKEN, parse_mode="HTML")

# === 10 —Ç–µ—Ö–Ω–∏–∫ ===
TECHNIQUES = [
    ("1. –î—ã—à–∏—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ", "–ú–µ–¥–ª–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ 1-5, –ø–∞—É–∑–∞ 1, –≤—ã–¥–æ—Ö 1-5. 1‚Äì3 –º–∏–Ω—É—Ç—ã."),
    ("2. –ü—Ä–∏–∑–Ω–∞–π—Ç–µ –ø–∞–Ω–∏—á–µ—Å–∫—É—é –∞—Ç–∞–∫—É", "–°–∫–∞–∂–∏—Ç–µ —Å–µ–±–µ: ¬´–≠—Ç–æ –ø–∞–Ω–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞, –Ω–µ –æ–ø–∞—Å–Ω–æ¬ª."),
    ("3. –ó–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞", "–°–Ω–∏–∑—å—Ç–µ —Å—Ç–∏–º—É–ª—ã: –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞, 3 —Ü–∏–∫–ª–∞ –¥—ã—Ö–∞–Ω–∏—è."),
    ("4. –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å 5-4-3-2-1", "5 –≤–∏–∂—É, 4 –∫–∞—Å–∞—é—Å—å, 3 —Å–ª—ã—à—É, 2 –∑–∞–ø–∞—Ö–∞, 1 –≤–∫—É—Å."),
    ("5. –ù–∞–π–¥–∏—Ç–µ ¬´—è–∫–æ—Ä—å¬ª", "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ."),
    ("6. –ú—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è", "–†–∞—Å—Å–ª–∞–±–ª—è–π—Ç–µ –≥—Ä—É–ø–ø—ã –º—ã—à—Ü –ø–æ –æ—á–µ—Ä–µ–¥–∏."),
    ("7. –ú—ã—Å–ª–µ–Ω–Ω–æ–µ —Å–ø–æ–∫–æ–π–Ω–æ–µ –º–µ—Å—Ç–æ", "–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –º–µ—Å—Ç–æ, –≥–¥–µ –≤–∞–º —Ö–æ—Ä–æ—à–æ, 1‚Äì2 –º–∏–Ω—É—Ç—ã."),
    ("8. –ú—è–≥–∫–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–ü—Ä–æ–π–¥–∏—Ç–µ—Å—å 3‚Äì5 –º–∏–Ω—É—Ç, –ª—ë–≥–∫–∞—è —Ä–∞–∑–º–∏–Ω–∫–∞."),
    ("9. –û–±–æ–Ω—è–Ω–∏–µ", "–ü—Ä–∏—è—Ç–Ω—ã–π –∑–∞–ø–∞—Ö —É—Å–∏–ª–∏–≤–∞–µ—Ç —É—Å–ø–æ–∫–æ–µ–Ω–∏–µ."),
    ("10. –†–∏—Ç–º–∏—á–Ω—ã–π —Ç–µ–∫—Å—Ç", "–ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ —Ç–µ–∫—Å—Ç –≤ —Ä–∏—Ç–º–µ –¥—ã—Ö–∞–Ω–∏—è."),
]

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def main_menu():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    kb.add(
        types.KeyboardButton("‚ö° –°—Ä–æ—á–Ω–æ ‚Äî –ø–∞–Ω–∏–∫–∞"),
        types.KeyboardButton("üß∞ 10 —Ç–µ—Ö–Ω–∏–∫"),
        types.KeyboardButton("‚ÑπÔ∏è –ü—Ä–∞–≤–¥–∞ –æ –ü–ê"),
        types.KeyboardButton("üìã –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å"),
        types.KeyboardButton("üë®‚Äç‚öïÔ∏è –ü–æ–º–æ—â—å"),
        types.KeyboardButton("üîÅ –°–±—Ä–æ—Å/–°—Ç–∞—Ä—Ç")
    )
    return kb

WELCOME = (
    "üõ°Ô∏è <b>–ù–ï–¢ –ø–∞–Ω–∏–∫–µ!</b>\n\n"
    "–°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ: <b>–æ—Ç –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫ –Ω–µ —É–º–∏—Ä–∞—é—Ç</b>.\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ."
)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.message_handler(commands=["start"])
def on_start(message):
    bot.send_message(message.chat.id, WELCOME, reply_markup=main_menu())

@bot.message_handler(func=lambda m: m.text == "üîÅ –°–±—Ä–æ—Å/–°—Ç–∞—Ä—Ç")
def on_reset(message):
    on_start(message)

# === –°—Ä–æ—á–Ω–æ ‚Äî –ø–∞–Ω–∏–∫–∞ ===
URGENT = (
    "‚ö° <b>–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏ –ø–∞–Ω–∏–∫–µ</b>\n\n"
    "1) –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: <b>–æ—Ç –ü–ê –Ω–µ —É–º–∏—Ä–∞—é—Ç</b>\n"
    "2) –î—ã—Ö–∞–Ω–∏–µ 4-1-5: –≤–¥–æ—Ö 1-2-3-4 ‚Ä¢ –ø–∞—É–∑–∞ 1 ‚Ä¢ –≤—ã–¥–æ—Ö 1-2-3-4-5 (60‚Äì120 —Å–µ–∫)\n"
    "3) –ó–∞–∑–µ–º–ª–µ–Ω–∏–µ 5-4-3-2-1: 5 –≤–∏–∂—É ‚Ä¢ 4 –∫–∞—Å–∞—é—Å—å ‚Ä¢ 3 —Å–ª—ã—à—É ‚Ä¢ 2 –∑–∞–ø–∞—Ö–∞ ‚Ä¢ 1 –≤–∫—É—Å\n"
    "4) –°–∫–∞–∂–∏—Ç–µ: ¬´–ü—Ä–∏–ª–∏–≤ –ø—Ä–æ–π–¥—ë—Ç. –Ø –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –Ø —É–ø—Ä–∞–≤–ª—è—é –¥—ã—Ö–∞–Ω–∏–µ–º¬ª\n\n"
    "–°—Ç–∞–ª–æ –ª–µ–≥—á–µ?"
)

def relief_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    kb.add(
        types.KeyboardButton("‚úÖ –î–∞"),
        types.KeyboardButton("‚ûñ –ù–µ–º–Ω–æ–≥–æ"),
        types.KeyboardButton("‚ùå –ü–æ–∫–∞ –Ω–µ—Ç")
    )
    kb.add(types.KeyboardButton("üîÅ –°–±—Ä–æ—Å/–°—Ç–∞—Ä—Ç"))
    return kb

@bot.message_handler(func=lambda m: m.text == "‚ö° –°—Ä–æ—á–Ω–æ ‚Äî –ø–∞–Ω–∏–∫–∞")
def on_panic(message):
    bot.send_message(message.chat.id, URGENT, reply_markup=relief_kb())

@bot.message_handler(func=lambda m: m.text in ["‚úÖ –î–∞", "‚ûñ –ù–µ–º–Ω–æ–≥–æ", "‚ùå –ü–æ–∫–∞ –Ω–µ—Ç"])
def on_relief_answer(message):
    if message.text == "‚úÖ –î–∞":
        bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ –∏ —Ñ–æ–∫—É—Å –µ—â—ë –º–∏–Ω—É—Ç—É.", reply_markup=main_menu())
    elif message.text == "‚ûñ –ù–µ–º–Ω–æ–≥–æ":
        bot.send_message(message.chat.id, "–ü–æ–≤—Ç–æ—Ä–∏–º –¥—ã—Ö–∞–Ω–∏–µ 4-1-5 –∏ –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ 5-4-3-2-1 –µ—â—ë –º–∏–Ω—É—Ç—É.", reply_markup=relief_kb())
    else:
        bot.send_message(message.chat.id, "–Ø —Å –≤–∞–º–∏. –ï—â—ë –º–∏–Ω—É—Ç–∞ –¥—ã—Ö–∞–Ω–∏—è, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ ¬´üß∞ 10 —Ç–µ—Ö–Ω–∏–∫¬ª.", reply_markup=main_menu())

# === 10 —Ç–µ—Ö–Ω–∏–∫: –º–µ–Ω—é –∏ callback ===
def techniques_menu():
    mk = types.InlineKeyboardMarkup(row_width=2)
    buttons = [types.InlineKeyboardButton(title, callback_data=f"tech_{i}") for i, (title, _) in enumerate(TECHNIQUES, start=1)]
    mk.add(*buttons)
    mk.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main"))
    return mk

@bot.message_handler(func=lambda m: m.text == "üß∞ 10 —Ç–µ—Ö–Ω–∏–∫")
def on_tech_list(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É:", reply_markup=techniques_menu())

@bot.callback_query_handler(func=lambda c: c.data.startswith("tech_") or c.data=="back_main")
def on_tech_click(call):
    if call.data == "back_main":
        bot.edit_message_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ üëá", call.message.chat.id, call.message.message_id)
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=main_menu())
        return
    idx = int(call.data.split("_")[1]) - 1
    title, text = TECHNIQUES[idx]
    bot.answer_callback_query(call.id)
    bot.edit_message_text(f"<b>{title}</b>\n\n{text}", call.message.chat.id, call.message.message_id, parse_mode="HTML", reply_markup=techniques_menu())

# === –ü—Ä–∞–≤–¥–∞ –æ –ü–ê ===
TRUTH = (
    "‚ÑπÔ∏è <b>–ü—Ä–∞–≤–¥–∞ –æ –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫–∞—Ö</b>\n\n"
    "‚Ä¢ –ü–ê ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–π, –Ω–æ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–π —Å—Ç—Ä–µ—Å—Å-–æ—Ç–∫–ª–∏–∫. –û—Ç –Ω–µ—ë –Ω–µ —É–º–∏—Ä–∞—é—Ç.\n"
    "‚Ä¢ –ü–∏–∫ –æ–±—ã—á–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –∑–∞ 5‚Äì10 –º–∏–Ω—É—Ç.\n"
    "‚Ä¢ –°–∏–º–ø—Ç–æ–º—ã —É—Å–∏–ª–∏–≤–∞—é—Ç—Å—è —Å—Ç—Ä–∞—Ö–æ–º: —Å–ø–æ–∫–æ–π–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ —É—Å–∫–æ—Ä—è—é—Ç —Å–ø–∞–¥.\n"
    "‚Ä¢ –ü–æ–º–æ–≥–∞—é—Ç: –¥—ã—Ö–∞–Ω–∏–µ, –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ, –º—è–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–æ–Ω."
)
@bot.message_handler(func=lambda m: m.text == "‚ÑπÔ∏è –ü—Ä–∞–≤–¥–∞ –æ –ü–ê")
def on_truth(message):
    bot.send_message(message.chat.id, TRUTH)

# === –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å ===
PLAN = (
    "üìã <b>–ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å</b>\n\n"
    "‚Ä¢ –°–æ–Ω 7‚Äì9 —á–∞—Å–æ–≤, –∫–æ—Ñ–µ–∏–Ω –¥–æ –æ–±–µ–¥–∞.\n"
    "‚Ä¢ 10‚Äì20 –º–∏–Ω. –ø—Ä–æ–≥—É–ª–∫–∏ –∏–ª–∏ –ª—ë–≥–∫–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞.\n"
    "‚Ä¢ 2‚Äì3 —Ü–∏–∫–ª–∞ –¥—ã—Ö–∞–Ω–∏—è/–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ 2 –º–∏–Ω.\n"
    "‚Ä¢ –ú–∞–ª–µ–Ω—å–∫–∏–µ —Ü–µ–ª–∏ + –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–µ—Ä–µ—Ä—ã–≤—ã.\n"
    "‚Ä¢ –í–µ—á–µ—Ä–æ–º ‚Äî —Ç—ë–ø–ª—ã–π –¥—É—à, –≥–∞–¥–∂–µ—Ç—ã ‚â§ 1 —á–∞—Å –¥–æ —Å–Ω–∞."
)
@bot.message_handler(func=lambda m: m.text == "üìã –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å")
def on_plan(message):
    bot.send_message(message.chat.id, PLAN)

# === –ü–æ–º–æ—â—å —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º ===
HELP = "üë®‚Äç‚öïÔ∏è –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å: @MSL72Rph"
@bot.message_handler(func=lambda m: m.text == "üë®‚Äç‚öïÔ∏è –ü–æ–º–æ—â—å")
def on_help(message):
    bot.send_message(message.chat.id, HELP)

# === –§–æ–ª–±—ç–∫ ===
@bot.message_handler(func=lambda m: True)
def fallback(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá", reply_markup=main_menu())

print("ü§ñ NET PANIC Bot –∑–∞–ø—É—â–µ–Ω‚Ä¶")

# === –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤–Ω—É—Ç—Ä–∏ Python ===
while True:
    try:
        bot.polling(none_stop=True, interval=0, timeout=30)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:", e)
        time.sleep(5)
