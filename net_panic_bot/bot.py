import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = "8247573717:AAEWVkxsTFsCzbPGIWwLkfQvcfpAdJromaU"

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)

MAIN_MENU = [
    [InlineKeyboardButton("‚ö° –°–†–û–ß–ù–û –ü–ê–ù–ò–ö–ê", callback_data='panic')],
    [InlineKeyboardButton("üìò –ü–†–ê–í–î–ê –û –ü–ê", callback_data='truth')],
    [InlineKeyboardButton("‚ÑπÔ∏è –ü–û–ú–û–©–¨", callback_data='help')],
    [InlineKeyboardButton("üîß 10–¢–ï–•–ù–ò–ö", callback_data='techniques')],
    [InlineKeyboardButton("üìÖ –ü–õ–ê–ù –ù–ê –î–ï–ù–¨", callback_data='plan')],
    [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å/—Å—Ç–∞—Ä—Ç", callback_data='reset')],
    [InlineKeyboardButton("üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='info')],
]

TECHNIQUES = [
    "1. –ì–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ",
    "2. –ü—Ä–∏–∑–Ω–∞–Ω–∏–µ –∞—Ç–∞–∫–∏",
    "3. –¢–µ—Ö–Ω–∏–∫–∞ '54321'",
    "4. –ú—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è",
    "5. –§–æ–∫—É—Å –Ω–∞ —Ç–µ–ª–µ—Å–Ω—ã—Ö –æ—â—É—â–µ–Ω–∏—è—Ö",
    "6. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è",
    "7. –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
    "8. –ü–µ—Ä–µ—Å–º–æ—Ç—Ä –º—ã—Å–ª–µ–π",
    "9. –ü–æ–∏—Å–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
    "10. –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = InlineKeyboardMarkup(MAIN_MENU)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø NET_panic_bot. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=reply_markup)

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == 'panic':
        response = "‚ö° 10 —Å–æ–≤–µ—Ç–æ–≤ –ø—Ä–∏ –ø–∞–Ω–∏—á–µ—Å–∫–æ–π –∞—Ç–∞–∫–µ:\n1. –û—Å–æ–∑–Ω–∞–π—Ç–µ, —á—Ç–æ —ç—Ç–æ –ø–∞–Ω–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞\n2. –ù–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –±–æ—Ä–æ—Ç—å—Å—è\n3. –î—ã—à–∏—Ç–µ –≥–ª—É–±–æ–∫–æ\n4. –ú–µ—Ç–æ–¥—ã –∑–∞–∑–µ–º–ª–µ–Ω–∏—è\n5. –î–∞–π—Ç–µ –º–æ–∑–≥—É –∑–∞–¥–∞—á—É\n6. –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å—á–∞—Å—Ç—å–µ\n7. –ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å –¥—Ä—É–≥–æ–º\n8. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Å—Ç–∞\n9. –î—É–º–∞–π—Ç–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ\n10. –†–∞—Å—Å–ª–∞–±—å—Ç–µ –º—ã—à—Ü—ã"
    elif query.data == 'techniques':
        response = "üîß 10 —Ç–µ—Ö–Ω–∏–∫:\n" + "\n".join(TECHNIQUES)
    elif query.data == 'truth':
        response = "üìò –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞:\n‚Ä¢ –°–ø–æ—Ä—Ç\n‚Ä¢ –°–æ–Ω –∏ –ø–∏—Ç–∞–Ω–∏–µ\n‚Ä¢ –ô–æ–≥–∞ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏—è\n‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞"
    elif query.data == 'help':
        response = "‚ÑπÔ∏è –ü–æ–º–æ—â—å: –¥—ã—à–∏—Ç–µ –≥–ª—É–±–æ–∫–æ, –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–µ—Å—Ç–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –±–ª–∏–∑–∫–∏–º –∏–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—É."
    elif query.data == 'plan':
        response = "üìÖ –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å: –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–∞–ª–æ–≥–æ, –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –≤–ø–µ—Ä—ë–¥, —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ —É—Å–ø–µ—Ö–∏."
    elif query.data == 'reset':
        response = "üîÑ –°–±—Ä–æ—Å: –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∑–∞–Ω–æ–≤–æ."
    elif query.data == 'info':
        response = "üìù –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏ –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫–∞—Ö."
    else:
        response = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."
    reply_markup = InlineKeyboardMarkup(MAIN_MENU)
    await query.edit_message_text(text=response, reply_markup=reply_markup)

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    print("‚úÖ NET_panic_bot –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()

