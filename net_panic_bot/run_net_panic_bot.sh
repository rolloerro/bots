#!/usr/bin/env bash
set -e

BASE_DIR="$HOME/bots/NET_panic_bot"
BOT_FILE="$BASE_DIR/bot.py"
LOG_DIR="$BASE_DIR/logs"
LOG_FILE="$LOG_DIR/bot.log"
TOKEN="8247573717:AAEWVkxsTFsCzbPGIWwLkfQvcfpAdJromaU"

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫–∏
mkdir -p "$BASE_DIR"
mkdir -p "$LOG_DIR"

# –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
VENV_DIR="$BASE_DIR/venv"
if [ ! -d "$VENV_DIR" ]; then
    python3 -m venv "$VENV_DIR"
fi
source "$VENV_DIR/bin/activate"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install --upgrade pip
pip install python-telegram-bot

# –°–æ–∑–¥–∞—ë–º bot.py –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f "$BOT_FILE" ]; then
cat > "$BOT_FILE" <<EOF
#!/usr/bin/env python3
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = "$TOKEN"

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

MAIN_MENU = [
    [InlineKeyboardButton("‚ö° –°–†–û–ß–ù–û –ü–ê–ù–ò–ö–ê", callback_data='panic')],
    [InlineKeyboardButton("üìò –ü–†–ê–í–î–ê –û –ü–ê", callback_data='truth')],
    [InlineKeyboardButton("‚ÑπÔ∏è –ü–û–ú–û–©–¨", callback_data='help')],
    [InlineKeyboardButton("üîß 10–¢–ï–•–ù–ò–ö", callback_data='techniques')],
    [InlineKeyboardButton("üìÖ –ü–õ–ê–ù –ù–ê –î–ï–ù–¨", callback_data='plan')],
    [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å/—Å—Ç–∞—Ä—Ç", callback_data='reset')],
    [InlineKeyboardButton("üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='info')],
]

TECHNIQUES = [
    "1. –ì–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ",
    "2. –ü—Ä–∏–∑–Ω–∞–Ω–∏–µ –∞—Ç–∞–∫–∏",
    "3. –¢–µ—Ö–Ω–∏–∫–∞ '54321'",
    "4. –ú—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è",
    "5. –§–æ–∫—É—Å –Ω–∞ —Ç–µ–ª–µ—Å–Ω—ã—Ö –æ—â—É—â–µ–Ω–∏—è—Ö",
    "6. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è",
    "7. –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
    "8. –ü–µ—Ä–µ—Å–º–æ—Ç—Ä –º—ã—Å–ª–µ–π",
    "9. –ü–æ–∏—Å–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
    "10. –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = InlineKeyboardMarkup(MAIN_MENU)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø NET_panic_bot. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=reply_markup)

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == 'panic':
        response = (
            "‚ö° 10 —Å–æ–≤–µ—Ç–æ–≤, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –ø–∞–Ω–∏—á–µ—Å–∫–æ–π –∞—Ç–∞–∫–æ–π:\\n"
            "1. –û—Å–æ–∑–Ω–∞–π—Ç–µ, —á—Ç–æ —ç—Ç–æ –ø–∞–Ω–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞\\n"
            "2. –ù–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –±–æ—Ä–æ—Ç—å—Å—è\\n"
            "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏\\n"
            "4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–µ—Ç–æ–¥—ã –∑–∞–∑–µ–º–ª–µ–Ω–∏—è\\n"
            "5. –î–∞–π—Ç–µ —Å–≤–æ–µ–º—É –º–æ–∑–≥—É –∑–∞–¥–∞—á—É\\n"
            "6. –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å—á–∞—Å—Ç—å–µ\\n"
            "7. –ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å –¥—Ä—É–≥–æ–º\\n"
            "8. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Å—Ç–∞\\n"
            "9. –î—É–º–∞–π—Ç–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ\\n"
            "10. –†–∞—Å—Å–ª–∞–±—å—Ç–µ –º—ã—à—Ü—ã\\n"
            "üìå –ü—Ä–∏ —á–∞—Å—Ç—ã—Ö –ø—Ä–∏—Å—Ç—É–ø–∞—Ö –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É."
        )
    elif query.data == 'techniques':
        response = "üîß 10 —Ç–µ—Ö–Ω–∏–∫ –¥–ª—è –±–æ—Ä—å–±—ã —Å –ø–∞–Ω–∏—á–µ—Å–∫–∏–º–∏ –∞—Ç–∞–∫–∞–º–∏:\\n" + "\\n".join(TECHNIQUES)
    elif query.data == 'truth':
        response = (
            "üìò –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å:\\n"
            "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è —Å–ø–æ—Ä—Ç–æ–º\\n"
            "‚Ä¢ –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Å–æ–Ω –∏ –∑–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ\\n"
            "‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏: –π–æ–≥–∞ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏—è\\n"
            "‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞"
        )
    elif query.data == 'help':
        response = "‚ÑπÔ∏è –ü–æ–º–æ—â—å: –¥—ã—à–∏—Ç–µ –≥–ª—É–±–æ–∫–æ, –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–µ—Å—Ç–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –±–ª–∏–∑–∫–∏–º –∏–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—É."
    elif query.data == 'plan':
        response = "üìÖ –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å: –Ω–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ, –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –≤–ø–µ—Ä—ë–¥, —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ —É—Å–ø–µ—Ö–∏."
    elif query.data == 'reset':
        response = "üîÑ –°–±—Ä–æ—Å: –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∑–∞–Ω–æ–≤–æ."
    elif query.data == 'info':
        response = "üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: —è –±–æ—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏ –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫–∞—Ö."
    else:
        response = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."

    reply_markup = InlineKeyboardMarkup(MAIN_MENU)
    await query.edit_message_text(text=response, reply_markup=reply_markup)

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    print("‚úÖ NET_panic_bot –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()
EOF
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç –≤ —Ñ–æ–Ω–µ —Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏
nohup bash -c "while true; do source $VENV_DIR/bin/activate && python3 $BOT_FILE || true; echo '‚ö†Ô∏è NET_panic_bot —É–ø–∞–ª, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...'; sleep 5; done" > "$LOG_FILE" 2>&1 &

echo "üöÄ NET_panic_bot –∑–∞–ø—É—â–µ–Ω! –õ–æ–≥–∏: $LOG_FILE"
#!/bin/bash

BOT_DIR=~/bots/NET_panic_bot
LOG_DIR=$BOT_DIR/logs
LOG_FILE=$LOG_DIR/bot.log
VENV_DIR=$BOT_DIR/venv

mkdir -p $LOG_DIR

# –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -d "$VENV_DIR" ]; then
    python3 -m venv $VENV_DIR
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source $VENV_DIR/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º pip –∏ —Å—Ç–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install --upgrade pip
pip install python-telegram-bot --quiet

BOT_FILE=$BOT_DIR/net_panic_bot.py

if [ ! -f "$BOT_FILE" ]; then
    echo "‚ùå –§–∞–π–ª $BOT_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ —Å –ª–æ–≥–∞–º–∏
nohup python3 $BOT_FILE > $LOG_FILE 2>&1 &

echo "‚úÖ NET_panic_bot –∑–∞–ø—É—â–µ–Ω! –õ–æ–≥–∏: $LOG_FILE"
#!/usr/bin/env python3
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = "8247573717:AAEWVkxsTFsCzbPGIWwLkfQvcfpAdJromaU"

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)

# --- –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ ---
MAIN_MENU = [
    ("‚ö° –°–†–û–ß–ù–û –ü–ê–ù–ò–ö–ê", "panic"),
    ("üìñ –ü–†–ê–í–î–ê –û –ü–ê", "truth"),
    ("üÜò –ü–û–ú–û–©–¨", "help"),
    ("üîü 10 –¢–ï–•–ù–ò–ö", "techniques"),
    ("üìÖ –ü–õ–ê–ù –ù–ê –î–ï–ù–¨", "plan"),
    ("üîÑ –°–±—Ä–æ—Å/—Å—Ç–∞—Ä—Ç", "reset"),
    ("‚ÑπÔ∏è –ò–ù–§–û", "info"),
    ("üí¨ –ö–æ–Ω—Ç–∞–∫—Ç—ã", "contacts")
]

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---
INFO_TEXT = (
    "–ú—ã —Å–æ–±—Ä–∞–ª–∏ –¥–ª—è –≤–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, "
    "—á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–Ω–∏—á–µ—Å–∫—É—é –∞—Ç–∞–∫—É, –¥–∞–∂–µ –µ—Å–ª–∏ —Ä—è–¥–æ–º –Ω–µ—Ç –≤—Ä–∞—á–∞:\n\n"
    "1Ô∏è‚É£ –ì–ª—É–±–æ–∫–æ –∏ –º–µ–¥–ª–µ–Ω–Ω–æ –¥—ã—à–∏—Ç–µ.\n"
    "2Ô∏è‚É£ –ó–∞–¥–µ—Ä–∂–∏—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ –Ω–∞ —Å–µ–∫—É–Ω–¥—É.\n"
    "3Ô∏è‚É£ –ü—Ä–∏–∑–Ω–∞–π—Ç–µ –ø–∞–Ω–∏—á–µ—Å–∫—É—é –∞—Ç–∞–∫—É.\n"
    "4Ô∏è‚É£ –ù–µ –æ—Ç–≤–ª–µ–∫–∞–π—Ç–µ—Å—å, –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞.\n"
    "5Ô∏è‚É£ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Å–æ–∑–Ω–∞–Ω–∏–µ.\n"
    "6Ô∏è‚É£ –ù–∞–π–¥–∏—Ç–µ –æ–±—ä–µ–∫—Ç —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫–∏.\n"
    "7Ô∏è‚É£ –†–∞—Å—Å–ª–∞–±—å—Ç–µ –º—ã—à—Ü—ã.\n"
    "8Ô∏è‚É£ –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Ä–µ—Å—É—Ä—Å–Ω–æ–µ –º–µ—Å—Ç–æ.\n"
    "9Ô∏è‚É£ –ü—Ä–æ–≥—É–ª—è–π—Ç–µ—Å—å –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ.\n"
    "üîü –õ–∞–≤–∞–Ω–¥–∞ –¥–ª—è —É—Å–ø–æ–∫–æ–µ–Ω–∏—è.\n"
)

TECHNIQUES_TEXT = (
    "10 —Ç–µ—Ö–Ω–∏–∫ –¥–ª—è –±–æ—Ä—å–±—ã —Å –ø–∞–Ω–∏–∫–æ–π:\n"
    "1. –ì–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ\n"
    "2. –ü—Ä–∏–∑–Ω–∞–Ω–∏–µ –∞—Ç–∞–∫–∏\n"
    "3. –¢–µ—Ö–Ω–∏–∫–∞ 54321\n"
    "4. –ú—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è\n"
    "5. –§–æ–∫—É—Å–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç–µ–ª–µ—Å–Ω—ã—Ö –æ—â—É—â–µ–Ω–∏—è—Ö\n"
    "6. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–µ—Å—Ç–∞\n"
    "7. –õ—ë–≥–∫–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
    "8. –ü–µ—Ä–µ—Å–º–æ—Ç—Ä –º—ã—Å–ª–µ–π\n"
    "9. –ü–æ–∏—Å–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n"
    "10. –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º\n"
)

CONTACTS_TEXT = "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏: @MSL72Rph (Pharm + OpenAI)"

# --- –§—É–Ω–∫—Ü–∏–∏ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø NET_panic_bot ‚ö°\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=main_keyboard()
    )

def main_keyboard():
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ 4+4
    buttons = [InlineKeyboardButton(text, callback_data=data) for text, data in MAIN_MENU]
    return InlineKeyboardMarkup([buttons[:4], buttons[4:]])

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    data = query.data
    if data == "panic":
        text = "üö® –ï—Å–ª–∏ –ø–∞–Ω–∏–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å: –¥—ã—à–∏—Ç–µ –≥–ª—É–±–æ–∫–æ, –∑–∞–∑–µ–º–ª—è–π—Ç–µ—Å—å, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –º—ã—Å–ª–∏."
    elif data == "truth":
        text = "üìñ –ü–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏ –Ω–µ –æ–ø–∞—Å–Ω—ã —Ñ–∏–∑–∏—á–µ—Å–∫–∏, –Ω–æ —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è –∫ –ø—Å–∏—Ö–∏–∫–µ."
    elif data == "help":
        text = "üÜò –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏, –¥—ã—Ö–∞–Ω–∏–µ, –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ, –ø–æ–¥–¥–µ—Ä–∂–∫—É –±–ª–∏–∑–∫–∏—Ö."
    elif data == "techniques":
        text = TECHNIQUES_TEXT
    elif data == "plan":
        text = "üìÖ –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å: –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —É—Ç—Ä–æ–º, –ø—Ä–æ–≥—É–ª–∫–∏, –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏."
    elif data == "reset":
        text = "üîÑ –°–±—Ä–æ—Å –º–µ–Ω—é. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞."
    elif data == "info":
        text = INFO_TEXT
    elif data == "contacts":
        text = CONTACTS_TEXT
    else:
        text = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."
    
    await query.edit_message_text(text=text, reply_markup=main_keyboard())

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    
    logging.info("–ó–∞–ø—É—Å–∫ NET_panic_bot...")
    app.run_polling()

if __name__ == "__main__":
    main()
